[project]
name = "assisted-service-mcp"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "assisted-service-client>=2.41.0.post3",
    "mcp>=1.15.0",
    "netaddr>=1.3.0",
    "requests>=2.32.3",
    "retry>=0.9.2",
    "prometheus_client>=0.22.1",
    "pyyaml>=6",
    "jinja2>=3.1",
    "pydantic>=2.12.1",
    "pydantic-settings>=2.6.0",
    "python-dotenv>=1.0.0",    
    "nestedarchive>=0.2.4",
    "tabulate>=0.9.0",
    "fastapi>=0.115.0",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.18.2",
    "pydocstyle>=6.3.0",
    "pylint>=3.3.7",
    "pyright>=1.1.402",
    "ruff>=0.12.1",
    "types-pyyaml>=6",
    "types-requests>=2.32.4.20250611",
    "pytest>=8.0.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.0.0",
]
performance = [
    "aiohttp>=3.8.0",
]

[tool.pylint.main]
ignore-paths = [
    ".venv",
    "venv",
    ".git",
    "__pycache__",
    ".pytest_cache",
    "build",
    "dist",
    "integration_test",
]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",  # We'll add these selectively
    "missing-class-docstring",   # We'll add these selectively
    "missing-function-docstring", # We'll add these selectively
    "too-few-public-methods",    # Common in utility classes
    "line-too-long",            # Handled by black
    "broad-exception-caught",   # Sometimes necessary
    "import-outside-toplevel",  # Allowed in tests and some runtime imports
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --verbose --cov=assisted_service_mcp --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
omit = [
  "assisted_service_mcp/src/main.py",
  "assisted_service_mcp/src/utils/log_analyzer/main.py",
]

[tool.pydocstyle]
add-ignore=[
  "D400"  # Stop requiring periods after non-sentences.
]

[tool.mypy]
exclude = "assisted_service_mcp/src/utils/log_analyzer/"
follow_imports = "skip"
explicit_package_bases = true
disallow_untyped_calls = true
disallow_untyped_defs = true 
disallow_incomplete_defs = true
ignore_missing_imports = true 
disable_error_code = ["attr-defined"]
